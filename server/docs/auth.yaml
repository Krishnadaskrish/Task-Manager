openapi: 3.0.0
info:
  title: Todo Manager API
  version: 1.0.0
  description: A simple Todo Manager API
servers:
  - url: http://localhost:3001
tags:
  - name: Auth
    description: Authentication management
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: User created successfully!
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the user
      example:
        name: John Doe
        email: john.doe@example.com
        password: password123
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the user
      example:
        email: john.doe@example.com
        password: password123
    LoginResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the login operation
        message:
          type: string
          description: Message of the login operation
        data:
          type: string
          description: JWT token
        email:
          type: string
          description: Email of the user
      example:
        status: success
        message: Login successful
        data: jwt_token_here
        email: john.doe@example.com
